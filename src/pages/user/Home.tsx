import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { MapPin, Mail, Phone, Calendar, Users } from "lucide-react";
import { Link } from "react-router-dom";
import { useEffect, useRef, useState } from "react";
import { toast } from "@/components/ui/use-toast";

const Home = () => {
  const mapRef = useRef<HTMLDivElement>(null);
  const [mapLoaded, setMapLoaded] = useState(false);
  const [mapError, setMapError] = useState(false);
  
  useEffect(() => {
    let isMounted = true;
    let checkInterval: NodeJS.Timeout;
    let errorTimeout: NodeJS.Timeout;
    
    // Function to initialize map once Google Maps is available
    const initializeMap = () => {
      if (!isMounted) return;
      
      if (window.google && window.google.maps) {
        console.log("Google Maps detected in Home component");
        setMapLoaded(true);
        clearInterval(checkInterval);
        clearTimeout(errorTimeout);
        initMap();
      }
    };
    
    // Start checking for Google Maps with shorter intervals
    checkInterval = setInterval(initializeMap, 300);
    
    // Set a timeout to show error if maps don't load after 15 seconds
    errorTimeout = setTimeout(() => {
      if (isMounted && !mapLoaded) {
        console.error("Google Maps failed to load after timeout");
        setMapError(true);
        clearInterval(checkInterval);
        toast({
          title: "Kh√¥ng th·ªÉ t·∫£i Google Maps",
          description: "Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng ho·∫∑c th·ª≠ l·∫°i sau.",
          variant: "destructive"
        });
      }
    }, 15000);
    
    // Try to initialize immediately in case maps are already loaded
    initializeMap();
    
    // Cleanup function
    return () => {
      isMounted = false;
      clearInterval(checkInterval);
      clearTimeout(errorTimeout);
    };
  }, [mapLoaded]);
  
  const initMap = () => {
    if (!mapRef.current || !window.google || !window.google.maps) {
      console.error("Required dependencies for map not available");
      setMapError(true);
      return;
    }
    
    try {
      console.log("Initializing map in Home component");
      const location = { lat: 20.9732762, lng: 105.7875231 }; // T·ªça ƒë·ªô 96A ƒê. Tr·∫ßn Ph√∫, H√† ƒê√¥ng
      
      const map = new window.google.maps.Map(mapRef.current, {
        center: location,
        zoom: 16,
        mapTypeControl: false,
        streetViewControl: false,
      });
      
      // Make sure that marker creation works across Google Maps versions
      try {
        // First try with standard marker which always works
        const marker = new window.google.maps.Marker({
          position: location,
          map,
          title: "S√¢n B√≥ng Xanh",
        });
        
        // Th√™m InfoWindow ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin
        const infoWindow = new window.google.maps.InfoWindow({
          content: `
            <div style="padding: 10px;">
              <h3 style="margin-bottom: 5px; font-weight: bold;">S√¢n B√≥ng Xanh</h3>
              <p style="margin: 0;">96A ƒê. Tr·∫ßn Ph√∫, P. M·ªô Lao, H√† ƒê√¥ng, H√† N·ªôi</p>
              <p style="margin: 0; margin-top: 5px;"><strong>SƒêT:</strong> 0123 456 789</p>
            </div>
          `
        });
        
        // Automatically open the info window and position it
        infoWindow.open(map, marker);
        
        // Add click listener to marker to open info window
        marker.addListener("click", () => {
          infoWindow.open(map, marker);
        });
        
        console.log("Map initialized successfully");
      } catch (markerError) {
        console.error("Error creating marker:", markerError);
        // If standard marker fails, show error
        setMapError(true);
        toast({
          title: "L·ªói hi·ªÉn th·ªã b·∫£n ƒë·ªì",
          description: "Kh√¥ng th·ªÉ t·∫°o ƒëi·ªÉm ƒë√°nh d·∫•u tr√™n b·∫£n ƒë·ªì.",
          variant: "destructive"
        });
      }
    } catch (error) {
      console.error("Error initializing map:", error);
      setMapError(true);
      toast({
        title: "Kh√¥ng th·ªÉ hi·ªÉn th·ªã b·∫£n ƒë·ªì",
        description: "C√≥ l·ªói x·∫£y ra khi t·∫£i Google Maps.",
        variant: "destructive"
      });
    }
  };
  
  const facilities = [
    {
      title: "S√¢n c·ªè nh√¢n t·∫°o ch·∫•t l∆∞·ª£ng cao",
      description: "S√¢n c·ªè nh·∫≠p kh·∫©u, ƒë·∫£m b·∫£o an to√†n khi thi ƒë·∫•u",
      icon: "üèüÔ∏è",
    },
    {
      title: "H·ªá th·ªëng chi·∫øu s√°ng hi·ªán ƒë·∫°i",
      description: "ƒê√®n LED cao c·∫•p, ƒë·∫£m b·∫£o √°nh s√°ng t·ªëi ∆∞u cho c√°c tr·∫≠n ƒë·∫•u bu·ªïi t·ªëi",
      icon: "üí°",
    },
    {
      title: "Ph√≤ng thay ƒë·ªì ti·ªán nghi",
      description: "Ph√≤ng thay ƒë·ªì r·ªông r√£i, s·∫°ch s·∫Ω v·ªõi t·ªß c√≥ kh√≥a an to√†n",
      icon: "üöø",
    },
    {
      title: "D·ªãch v·ª• ƒÉn u·ªëng",
      description: "ƒê·ªì ƒÉn nh·∫π, n∆∞·ªõc u·ªëng ph·ª•c v·ª• tr∆∞·ªõc v√† sau tr·∫≠n ƒë·∫•u",
      icon: "ü•§",
    },
  ];
  
  const fields = [
    { id: 1, name: "S√¢n A", size: "5 ng∆∞·ªùi", img: "https://placehold.co/600x400/E8F5E9/388E3C?text=S%C3%82N+A&font=roboto" },
    { id: 2, name: "S√¢n B", size: "5 ng∆∞·ªùi", img: "https://placehold.co/600x400/E8F5E9/388E3C?text=S%C3%82N+B&font=roboto" },
    { id: 3, name: "S√¢n C", size: "7 ng∆∞·ªùi", img: "https://placehold.co/600x400/E8F5E9/388E3C?text=S%C3%82N+C&font=roboto" },
    { id: 4, name: "S√¢n D", size: "7 ng∆∞·ªùi", img: "https://placehold.co/600x400/E8F5E9/388E3C?text=S%C3%82N+D&font=roboto" },
  ];

  return (
    <div className="space-y-16">
      {/* Hero Section */}
      <section className="py-12 px-4 md:px-0 text-center">
        <div className="max-w-3xl mx-auto">
          <h1 className="text-4xl md:text-5xl font-bold mb-6 text-field-900">
            S√¢n B√≥ng ƒê√° Ch·∫•t L∆∞·ª£ng Cao
          </h1>
          <p className="text-xl mb-8 text-gray-700">
            ƒê·∫∑t s√¢n nhanh ch√≥ng, ti·ªán l·ª£i c√πng nhi·ªÅu d·ªãch v·ª• ƒëi k√®m
          </p>
          <div className="flex flex-col sm:flex-row justify-center gap-4">
            <Link to="/dat-san">
              <Button className="bg-field-600 hover:bg-field-700 text-white px-6 py-6 text-lg">
                <Calendar className="w-5 h-5 mr-2" /> ƒê·∫∑t s√¢n ngay
              </Button>
            </Link>
            <Link to="/giao-luu">
              <Button variant="outline" className="border-field-500 text-field-700 hover:bg-field-50 px-6 py-6 text-lg">
                <Users className="w-5 h-5 mr-2" /> T√¨m ƒë·ªëi th·ªß
              </Button>
            </Link>
          </div>
        </div>
      </section>

      {/* Fields Display */}
      <section className="py-12">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-field-800">H·ªá Th·ªëng S√¢n B√≥ng</h2>
          <p className="text-gray-600 mt-2">
            Ch√∫ng t√¥i cung c·∫•p 4 s√¢n c·ªè nh√¢n t·∫°o ch·∫•t l∆∞·ª£ng cao
          </p>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
          {fields.map((field) => (
            <Card key={field.id} className="overflow-hidden hover:shadow-xl transition-shadow">
              <img
                src={field.img}
                alt={field.name}
                className="w-full h-48 object-cover"
              />
              <CardContent className="p-4 text-center">
                <h3 className="font-bold text-xl mb-1">{field.name}</h3>
                <p className="text-gray-600">S√¢n {field.size}</p>
                <Link to="/dat-san">
                  <Button variant="outline" className="mt-4 w-full border-field-500 text-field-700 hover:bg-field-50">
                    ƒê·∫∑t s√¢n n√†y
                  </Button>
                </Link>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>

      {/* Facilities */}
      <section className="py-12 bg-field-50 rounded-lg">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-field-800">Ti·ªán Nghi & D·ªãch V·ª•</h2>
          <p className="text-gray-600 mt-2">
            Ch√∫ng t√¥i cung c·∫•p c√°c ti·ªán √≠ch hi·ªán ƒë·∫°i cho ng∆∞·ªùi ch∆°i
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {facilities.map((facility, index) => (
            <div
              key={index}
              className="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow"
            >
              <div className="text-4xl mb-4">{facility.icon}</div>
              <h3 className="text-xl font-semibold mb-2">{facility.title}</h3>
              <p className="text-gray-600">{facility.description}</p>
            </div>
          ))}
        </div>
      </section>

      {/* About and Contact */}
      <section className="py-12 grid md:grid-cols-2 gap-8">
        <div>
          <h2 className="text-3xl font-bold text-field-800 mb-6">
            V·ªÅ S√¢n B√≥ng Xanh
          </h2>
          <p className="mb-4 text-gray-700">
            S√¢n B√≥ng Xanh l√† m·ªôt trong nh·ªØng ƒë·ªãa ƒëi·ªÉm ch∆°i b√≥ng ƒë√° ch·∫•t l∆∞·ª£ng h√†ng ƒë·∫ßu t·∫°i th√†nh ph·ªë. Ch√∫ng t√¥i cung c·∫•p s√¢n c·ªè nh√¢n t·∫°o chu·∫©n FIFA, v·ªõi h·ªá th·ªëng chi·∫øu s√°ng hi·ªán ƒë·∫°i v√† c√°c ti·ªán nghi ƒëi k√®m.
          </p>
          <p className="mb-6 text-gray-700">
            ƒê∆∞·ª£c th√†nh l·∫≠p t·ª´ nƒÉm 2018, ch√∫ng t√¥i lu√¥n cam k·∫øt mang ƒë·∫øn kh√¥ng gian thi ƒë·∫•u t·ªët nh·∫•t, d·ªãch v·ª• tuy·ªát v·ªùi v·ªõi gi√° c·∫£ ph·∫£i chƒÉng cho ng∆∞·ªùi ch∆°i b√≥ng ƒë√° m·ªçi l·ª©a tu·ªïi.
          </p>
          <div className="flex items-center gap-4">
            <div className="w-12 h-12 rounded-full bg-field-500 flex items-center justify-center">
              <span className="text-white font-bold text-xl">SB</span>
            </div>
            <div>
              <h3 className="font-bold text-xl">S√¢n B√≥ng Xanh</h3>
              <p className="text-gray-600">N∆°i ƒëam m√™ h·ªôi t·ª•</p>
            </div>
          </div>
          
          {/* Google Map */}
          <div className="mt-8 h-80 border border-gray-300 rounded-lg overflow-hidden">
            {mapError ? (
              <div className="w-full h-full flex flex-col items-center justify-center bg-gray-100">
                <MapPin className="h-12 w-12 text-field-500 mb-2" />
                <p className="text-gray-700 font-medium">Kh√¥ng th·ªÉ t·∫£i b·∫£n ƒë·ªì</p>
                <p className="text-gray-500 text-sm text-center px-4">
                  ƒê·ªãa ch·ªâ: 96A ƒê. Tr·∫ßn Ph√∫, P. M·ªô Lao, H√† ƒê√¥ng, H√† N·ªôi
                </p>
              </div>
            ) : (
              <div ref={mapRef} className="w-full h-full"></div>
            )}
          </div>
        </div>

        <div>
          <h2 className="text-3xl font-bold text-field-800 mb-6">
            Li√™n H·ªá & ƒê·∫∑t S√¢n
          </h2>
          <div className="space-y-4">
            <div className="flex items-start">
              <MapPin className="w-5 h-5 text-field-600 mt-1 mr-3" />
              <div>
                <h3 className="font-semibold">ƒê·ªãa ch·ªâ</h3>
                <p className="text-gray-700">
                  96A ƒê. Tr·∫ßn Ph√∫, P. M·ªô Lao, H√† ƒê√¥ng, H√† N·ªôi
                </p>
              </div>
            </div>

            <div className="flex items-start">
              <Phone className="w-5 h-5 text-field-600 mt-1 mr-3" />
              <div>
                <h3 className="font-semibold">ƒêi·ªán tho·∫°i</h3>
                <p className="text-gray-700">0123 456 789</p>
              </div>
            </div>

            <div className="flex items-start">
              <Mail className="w-5 h-5 text-field-600 mt-1 mr-3" />
              <div>
                <h3 className="font-semibold">Email</h3>
                <p className="text-gray-700">info@sanbongxanh.vn</p>
              </div>
            </div>
          </div>

          {/* Contact Form */}
          <div className="mt-6 bg-white p-6 rounded-lg shadow-md">
            <h3 className="text-xl font-semibold mb-4">G·ª≠i ph·∫£n h·ªìi</h3>
            <form className="space-y-4">
              <div>
                <input
                  type="text"
                  placeholder="H·ªç t√™n"
                  className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-field-500"
                />
              </div>
              <div>
                <input
                  type="email"
                  placeholder="Email"
                  className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-field-500"
                />
              </div>
              <div>
                <textarea
                  placeholder="N·ªôi dung"
                  rows={3}
                  className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-field-500"
                ></textarea>
              </div>
              <Button className="bg-field-600 hover:bg-field-700 text-white w-full">
                G·ª≠i ph·∫£n h·ªìi
              </Button>
            </form>
          </div>
        </div>
      </section>
    </div>
  );
};

export default Home;
